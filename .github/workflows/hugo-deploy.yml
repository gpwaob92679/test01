name: Deploy Hugo Site to Pages
run-name: Deployment triggered by ${{ jobs.report-info.outputs.run-name }}

on:
  repository_dispatch:
    types:
      - deploy
  workflow_dispatch:

permissions:
  pages: write
  id-token: write

env:
  SOURCE_REPO: gpwaob92679/gpwaob92679.github.io-src

concurrency:
  group: 'pages'
  cancel-in-progress: true

jobs:
  report-info:
    runs-on: ubuntu-latest
    outputs:
      run-name: ${{ steps.get-run.outputs.run-name }}
    steps:
      - name: Get workflow run for source repository
        id: get-run
        if: github.event_name == 'repository_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        run: run_name= \
               $(gh repos/${{github.event.client_payload.github.repository}}/actions/runs/${{github.event.client_payload.github.run_id}} \
               | jq '.name')
               && echo "run-name="${run_name}"" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.111.3
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout source repository
        uses: actions/checkout@v3
        with:
          repository: ${SOURCE_REPO}
          ref: main
          token: ${{ secrets.PAT }}
          submodules: recursive
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: hugo \
               --minify \
               --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
